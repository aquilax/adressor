// Generated by CoffeeScript 1.6.1
(function() {
  var __slice = [].slice;

  window.log = function() {
    var args;
    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    return $('#debug').val(args.join(";"));
  };

  window.Adr = window.Adr || {};

  window.Adr.Popup = {
    init: function() {
      var self;
      self = this;
      return chrome.runtime.onMessage.addListener(function(request, sender, sendResponse) {
        if (self[request.exec] != null) {
          return self[request.exec].apply(self, __slice.call(request.args).concat([sendResponse]));
        }
      });
    },
    send: function() {
      var args, callback, cmd, _i;
      cmd = arguments[0], args = 3 <= arguments.length ? __slice.call(arguments, 1, _i = arguments.length - 1) : (_i = 1, []), callback = arguments[_i++];
      return chrome.runtime.sendMessage({
        exec: cmd,
        args: args
      }, callback || function() {});
    },
    sendCS: function() {
      var args, callback, exec, _i;
      exec = arguments[0], args = 3 <= arguments.length ? __slice.call(arguments, 1, _i = arguments.length - 1) : (_i = 1, []), callback = arguments[_i++];
      return chrome.tabs.query({
        active: true,
        currentWindow: true
      }, function(tabs) {
        return chrome.tabs.sendMessage(tabs[0].id, {
          exec: exec,
          args: args
        }, callback || function() {});
      });
    },
    install: function() {
      chrome.tabs.executeScript(null, {
        file: "assets/js/external/jquery-2.0.3.min.js"
      });
      chrome.tabs.executeScript(null, {
        file: "assets/js/injection.js"
      });
      return log('installed');
    },
    getPositions: function() {
      var self;
      self = this;
      return this.sendCS('getPositions', function(response) {
        return self.renderPositions(response);
      });
    },
    renderPositions: function(positions) {
      var $positions, items, template;
      $positions = $('#positions');
      $positions.empty();
      template = $('#t_positions').text();
      items = Mustache.render(template, {
        ads: positions
      });
      return $positions.append(items);
    }
  };

  $(function() {
    Adr.Popup.init();
    $('#start').bind('click', function(event) {
      event.preventDefault();
      return Adr.Popup.install();
    });
    return $('#get_ads').bind('click', function(event) {
      event.preventDefault();
      return Adr.Popup.getPositions();
    });
  });

}).call(this);
